Traceback (most recent call last):
  File "/home/tom/miniconda3/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tom/miniconda3/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/home/tom/miniconda3/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/tom/miniconda3/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/home/tom/miniconda3/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/home/tom/miniconda3/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/home/tom/miniconda3/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/tom/miniconda3/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
crime_columns = {
    'Pickpocketing': '1.2.4 Zakkenrollerij',
    'Robbery': '1.4.6 Straatroof',
    'Public violence': '1.4.3 Openlijk geweld (persoon)',
    'Under influence on boat': '3.4.2 Onder invloed (water)'
}

def create_slider_plot(df):
    temps = [round(t, 1) for t in list(frange(5.0, 26.5, 0.5))]
    fig = go.Figure()

    # Voeg alle frames toe, Ã©Ã©n per temperatuur
    frames = []
    for temp in temps:
        lower, upper = temp - 0.5, temp + 0.5
        filtered = df[(df['TX'] >= lower) & (df['TX'] < upper)]
        y = [ (filtered[col].sum() / df[col].sum()) * 100 if df[col].sum() > 0 else 0
              for col in crime_columns.values() ]
        frames.append(go.Frame(
            data=[go.Bar(x=list(crime_columns.keys()), y=y)],
            name=f"{temp}"
        ))

    # Voeg eerste data toe als initiele trace
    fig.add_trace(frames[0].data[0])

    # Zet layout, slider en frames
    fig.update_layout(
        title="Crime Distribution by Temperature",
        yaxis=dict(range=[0,25], title="Pct of Total Incidents"),
        xaxis_title="Crime Type",
        width=800, height=600,
        updatemenus=[dict(
            type="buttons",
            showactive=False,
            buttons=[dict(label="Play", method="animate",
                          args=[None, {"frame": {"duration": 300, "redraw": True},
                                       "fromcurrent": True, "transition": {"duration": 0}}])]
        )],
        sliders=[dict(
            active=temps.index(20.0),
            currentvalue={"prefix": "Temp: "},
            pad={"t": 50},
            steps=[dict(label=f"{t}Â°C", method="animate", args=[[str(t)], {"frame": {"duration": 0}, "mode": "immediate"}])
                   for t in temps]
        )]
    )
    fig.frames = frames
    return fig

def frange(start, stop, step):
    while start <= stop:
        yield round(start, 1)
        start += step

# Voorbeeldgebruik:
# df = pd.read_csv("crime_weather_merged.csv")
fig = create_slider_plot(df)
# fig.write_html("crime_temp_slider.html")
fig.show()
------------------


[31m---------------------------------------------------------------------------[39m
[31mNameError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[9][39m[32m, line 58[39m
[32m     54[39m         start += step
[32m     56[39m [38;5;66;03m# Voorbeeldgebruik:[39;00m
[32m     57[39m [38;5;66;03m# df = pd.read_csv("crime_weather_merged.csv")[39;00m
[32m---> [39m[32m58[39m fig = [43mcreate_slider_plot[49m[43m([49m[43mdf[49m[43m)[49m
[32m     59[39m [38;5;66;03m# fig.write_html("crime_temp_slider.html")[39;00m
[32m     60[39m fig.show()

[36mCell[39m[36m [39m[32mIn[9][39m[32m, line 10[39m, in [36mcreate_slider_plot[39m[34m(df)[39m
[32m      8[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mcreate_slider_plot[39m(df):
[32m      9[39m     temps = [[38;5;28mround[39m(t, [32m1[39m) [38;5;28;01mfor[39;00m t [38;5;129;01min[39;00m [38;5;28mlist[39m(frange([32m5.0[39m, [32m26.5[39m, [32m0.5[39m))]
[32m---> [39m[32m10[39m     fig = [43mgo[49m.Figure()
[32m     12[39m     [38;5;66;03m# Voeg alle frames toe, Ã©Ã©n per temperatuur[39;00m
[32m     13[39m     frames = []

[31mNameError[39m: name 'go' is not defined

